<script src="{{ asset('assets/js/bundle.js') }}?ver=3.2.2"></script>
<script src="{{ asset('assets/js/scripts.js') }}?ver=3.2.2"></script>
<script src="{{ asset('assets/js/charts/gd-default.js') }}?ver=3.2.2"></script>
<script src="{{ asset('assets/js/libs/datatable-init-btns.js') }}?ver=3.2.2"></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const moneyInputs = document.querySelectorAll('.money-input');

        // Format visuel √† chaque frappe
        moneyInputs.forEach(input => {
            input.addEventListener('input', () => {
                let raw = input.value.replace(/\D/g, ''); // Supprime tout sauf les chiffres
                input.value = raw.replace(/\B(?=(\d{3})+(?!\d))/g, ' '); // Espace ins√©cable
            });
        });

        // Avant soumission, on nettoie les champs
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.addEventListener('submit', () => {
                moneyInputs.forEach(input => {
                    input.value = input.value.replace(/\s/g, '').replace(/[^\d.,]/g, '');
                });
            });
        });
    });
</script>
<script src="https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js" defer></script>
<script>
    window.OneSignalDeferred = window.OneSignalDeferred || [];
    OneSignalDeferred.push(async function (OneSignal) {
        await OneSignal.init({
            appId: "21bf691f-ee9d-4d3a-8c40-b15d1a98ebbd",
            safari_web_id: "web.onesignal.auto.5ccade99-0f35-4775-9ae0-5e2c3bfd110b",
            notifyButton: { enable: true },
        });

        console.log("‚úÖ OneSignal initialis√© (v16+)");

        // V√©rifie si l'utilisateur est d√©j√† abonn√©
        const optedIn = OneSignal.User.PushSubscription.optedIn;
        const pushToken = OneSignal.User.PushSubscription.token;
        console.log("üîç optedIn:", optedIn, "pushToken:", pushToken);

        if (optedIn && pushToken) {
            console.log("üîë Token d√©j√† pr√©sent:", pushToken);
            sendTokenToBackend(pushToken);
        } else {
            console.log("üîî Demande de permission...");
            await OneSignal.Notifications.requestPermission();

            // Apr√®s la demande, relire les propri√©t√©s
            const optedInNow = OneSignal.User.PushSubscription.optedIn;
            const newToken = OneSignal.User.PushSubscription.token;
            console.log("üÜï optedIn:", optedInNow, "pushToken:", newToken);

            if (optedInNow && newToken) {
                console.log("‚úÖ Souscription ok, token:", newToken);
                sendTokenToBackend(newToken);
            } else {
                console.warn("‚ö†Ô∏è L'utilisateur n'a pas accept√© les notifs ou token indisponible");
            }
        }

        function sendTokenToBackend(token) {
            fetch('/user/api/save-push-token', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ pushToken: token })
            })
                .then(res => {
                    if (!res.ok) throw new Error("Erreur HTTP");
                    console.log("üì¨ Token envoy√© au backend !");
                })
                .catch(err => {
                    console.error("‚ùå Erreur lors de l'envoi du token:", err);
                });
        }
    });
</script>
